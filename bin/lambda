#!/bin/bash

route=$HOME/Lambda

case $1 in

	run)
		echo Running Lambda λ
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
		tmux new-session -d -s discordo "cd $route && python3 discordo/app.py"
		tmux ls
	;;

	kill)
		echo Killing Lambda λ
		tmux kill-session -t lambda
		tmux kill-session -t discordo
	;;

	update)
		echo Updating Lambda λ
		cd $route
		git fetch && git merge origin/main
	;;

	reboot)
		echo Rebooting Lambda λ
		tmux kill-session -t lambda
        tmux kill-session -t discordo
		echo Restarting Lambda λ
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
        tmux new-session -d -s discordo "cd $route && python3 discordo/app.py"
        tmux ls
	;;

	update)
		echo Updating Lambda λ
		cd $route
		git fetch && git merge origin/main
	;;


	rupdate)
		# kill lambda
		echo Killing Lambda λ
		tmux kill-session -t lambda
		tmux kill-session -t discordo
		# update lambda
		echo Updating Lambda λ
		cd $route
		git fetch && git merge origin/main
		# and run lambda again
		echo Running Lambda λ
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
		tmux new-session -d -s discordo "cd $route && python3 discordo/app.py"
		tmux ls
	;;

	# backup from all the memory files. located in ram and data
	backup)
		cd $route
		echo Making Lambda Backup λ
		# date label to name the file
		date=$(date +%m-%d-%Y)
		# create the folder for the files
		mkdir $date-backup
		# copy the important files to the folder
		cp -r lambda/modules/data $date-backup/data
		cp -r ram $date-backup/ram
		# make the backup from data and add info.json
		tar cvzf backups/$date-backup.tar.gz $date-backup/
		# remove the backup file
		rm -rf $date-backup
		# and clear the log file
		echo "" > ram/log.txt
	;;

	# load a backup from a certain file
	checkpoint)
		# first make a backup from the actual info
		lambda backup
		# then delete all the files and put the checkpoint
		rm -rf ram
		rm -rf lambda/modules/data
		# unzip the file
		tar -xvf checkpoint.tar.gz
		# then get the name of the folder
		plus_folder=$(echo $2 | cut -d '.' -f 1)
		folder=$(echo $plus_folder | cut -d '/' -f 3)
		# now move the folders to their places
		mv $folder/data lambda/modules/data
		mv $folder/ram ram
		# remove the unziped folder
		rmdir $folder
		# and move the checkpoint to the backups as checkpoint
		mv $2 backups/checkpoint.tar.gz
		echo Lambda Checpoint Saved λ
	;;

	*)
		echo Unknown Command λ
		echo lambda "[run|kill|update|reboot|rupdate|backups|checkpoint]"
	;;
esac
