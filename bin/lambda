#!/bin/bash

route=$HOME/Lambda

case $1 in

	run)
		echo Running Lambda λ
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
		tmux new-session -d -s discordo "cd $route && python3 discordo/app.py"
		tmux ls
	;;

	kill)
		echo Killing Lambda λ
		tmux kill-session -t lambda
		tmux kill-session -t discordo
	;;

	update)
		echo Updating Lambda λ
		cd $route
		git fetch && git merge origin/main
	;;

	reboot)
		echo Rebooting Lambda λ
		tmux kill-session -t lambda
        tmux kill-session -t discordo
		echo Restarting Lambda λ
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
        tmux new-session -d -s discordo "cd $route && python3 discordo/app.py"
        tmux ls
	;;

	update)
		echo Updating Lambda λ
		cd $route
		git fetch && git merge origin/main
	;;


	rupdate)
		# kill lambda
		echo Killing Lambda λ
		tmux kill-session -t lambda
		tmux kill-session -t discordo
		# update lambda
		echo Updating Lambda λ
		cd $route
		git fetch && git merge origin/main
		# and run lambda again
		echo Running Lambda λ
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
		tmux new-session -d -s discordo "cd $route && python3 discordo/app.py"
		tmux ls
	;;

	# backup from all the memory files. located in ram and data
	backup)
		cd $route
		echo Making Lambda Backup λ
		# date label to name the file
		date=$(date +%m-%d-%Y)
		# create the folder for the files
		mkdir $date-backup
		# copy the important files to the folder
		cp -r lambda/modules/data $date-backup/data
		cp -r ram $date-backup/ram
		# make the backup from data and add info.json
		tar cvzf backups/$date-backup.tar.gz $date-backup/
		# remove the backup file
		rm -rf $date-backup
	;;

	# when lambda is new on the server, run all the configurations
	install)
		# the command must be ran in $HOME/Lambda
		if [ "$(pwd)" != "$HOME/Lambda" ]; then
			echo -> You have to be in $HOME/Lambda
			exit
		fi
		# if it is on the correct place
		echo Let me install me in your machine
		# lambda must be in $HOME/Lambda
		echo -> I will be in $HOME/Lambda
		# create the backup folder
		echo -> creating backup folder...
		mkdir backups
		# give permisions to the bin files
		echo -> setting permissions to the bin files...
		chmod 700 bin/lambda
		# install the python libraries to work
		echo -> installing python dependencies...
		pip3 install -r requirements.txt
		# the final settings
		echo -e "\n\n->We're almost there..."
		echo -> add $HOME/Lambda/bin to $PATH
		echo -> add "14 15 * * 0 lambda rupdate && lambda backup" to the cron
		echo -> and the info.json and the data/ from the backups
	;;

	*)
		echo Unknown Command:
		echo lambda "[run|kill|update|reboot|rupdate|backups|install]"
	;;
esac
