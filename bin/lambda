#!/bin/bash

# lambda path
route=$HOME/Lambda
# memory path
memory=$route/db/data
# log file
log_file=$memory/log/bin.txt

# colors
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No color

case $1 in

	run)
		echo -e "${GREEN}Running Lambda λ${NC}"
		# append to log
		echo "running lambda at $(date +"[%Y-%m-%d - %T]")" >> $log_file
		# run lambda
		tmux new-session -d -s db "cd $route && python3 db/app.py"
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
		tmux new-session -d -s discordo "cd $route && python3 interfaces/discordo.py"
		# sleep and wait to errors
        sleep 1
        # see tmux active sessions
        tmux ls
	;;

	kill)
		echo -e "${RED}Killing Lambda λ${NC}"
		# append to log
		echo "killing lambda at $(date +"[%Y-%m-%d - %T]")" >> $log_file
		# kill lambda
		tmux kill-session -t db
		tmux kill-session -t lambda
		tmux kill-session -t discordo
	;;

	update)
		cd $route
		echo -e "${BLUE}Updating Lambda λ${NC}"
		# append to log
		echo "updating lambda at $(date +"[%Y-%m-%d - %T]")" >> $log_file
		# update lambda
		git fetch && git merge origin/main
	;;

	reboot)
		echo -e "${GREEN}Rebooting Lambda λ${NC}"
		# append to log
		echo "rebooting lambda at $(date +"[%Y-%m-%d - %T]")" >> $log_file
		# kill lambda
		tmux kill-session -t db
		tmux kill-session -t lambda
	    tmux kill-session -t discordo
	    # and run lambda again
		tmux new-session -d -s db "cd $route && python3 db/app.py"
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
        tmux new-session -d -s discordo "cd $route && python3 interfaces/discordo.py"
        # sleep and wait to errors
        sleep 1
        # see tmux active sessions
        tmux ls
	;;

	rupdate)
		cd $route
		echo -e "${GREEN}Rupdating Lambda λ${NC}"
		# append to log
		echo "rupdating lambda at $(date +"[%Y-%m-%d - %T]")" >> $log_file
		# kill lambda
		tmux kill-session -t db
		tmux kill-session -t lambda
		tmux kill-session -t discordo
		# update lambda
		git fetch && git merge origin/main
		# run lambda again
		tmux new-session -d -s db "cd $route && python3 db/app.py"
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
		tmux new-session -d -s discordo "cd $route && python3 interfaces/discordo.py"
		# sleep and wait to errors
        sleep 1
        # see tmux active sessions
        tmux ls
	;;

	# backup from all the memory files, actually db/data
	backup)
		cd $route
		echo -e "${BLUE}Making Lambda Backup λ${NC}"
		# append to log
		echo "lambda backup at $(date +"[%Y-%m-%d - %T]")" >> $log_file
		# date label to name the file
		date=$(date +%m-%d-%Y)
		# create the folder for the files called backup
		mkdir data
		# copy the important files to the folder
		cp -r $memory .
		# make the memory backup and send it to backups
		tar -cvf backups/$date-backup.tar.gz data
		# remove the backup file
		rm -rf data
		# remove all the other log files
		rm $memory/log/*.txt
		# and let the first line of log be the backup line
		echo "lambda backup at $(date +"[%Y-%m-%d - %T]")" >> $log_file
	;;

	# run an app
	app)
		# locate the app
		app="apps/$2/$2"
		# and run the app
		tmux new-session -d -s $2 "cd $route && sh $app"
		# append to log
		echo "lambda app $2 ran at $(date +"[%Y-%m-%d - %T]")" >> $log_file
		# wait to errors
		sleep 1
		# and see results
		tmux ls
	;;

	# kill app
	app-kill)
		# kill the app session
		tmux kill-session -t $2
		# append to log
		echo "lambda app $2 killed at $(date +"[%Y-%m-%d - %T]")" >> $log_file
	;;

	*)
		echo Unknown Command λ
		echo lambda "[run|kill|update|reboot|rupdate|backup|app|app-kill]"
	;;
esac