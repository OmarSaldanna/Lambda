#!/bin/bash

route=$HOME/Lambda

case $1 in

	run)
		echo Running Lambda λ
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
		tmux new-session -d -s discordo "cd $route && python3 discordo/app.py"
		tmux ls
	;;

	kill)
		echo Killing Lambda λ
		tmux kill-session -t lambda
		tmux kill-session -t discordo
	;;

	update)
		echo Updating Lambda λ
		cd $route
		git fetch && git merge origin/main
	;;

	reboot)
		echo Rebooting Lambda λ
		tmux kill-session -t lambda
        tmux kill-session -t discordo
		echo Restarting Lambda λ
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
        tmux new-session -d -s discordo "cd $route && python3 discordo/app.py"
        tmux ls
	;;

	update)
		echo Updating Lambda λ
		cd $route
		git fetch && git merge origin/main
	;;


	rupdate)
		# kill lambda
		echo Killing Lambda λ
		tmux kill-session -t lambda
		tmux kill-session -t discordo
		# update lambda
		echo Updating Lambda λ
		cd $route
		git fetch && git merge origin/main
		# and run lambda again
		echo Running Lambda λ
		tmux new-session -d -s lambda "cd $route && python3 lambda/app.py"
		tmux new-session -d -s discordo "cd $route && python3 discordo/app.py"
		tmux ls
	;;

	# backup from all the memory files
	backup)
		cd $route
		echo Making Lambda Backup λ
		# date label to name the file
		date=$(date +%d-%m-%Y)
		# create the folder for the files
		mkdir lbackup$date
		# copy the important files to the folder
		cp info.json lbackup$date/info.json
		cp -r lambda/modules/data lbackup$date/data
		# make the backup from data and add info.json
		tar cvzf backups/lbackup$date.tar.gz lbackup$date/
		# remove the backup file
		rm -rf lbackup$date
	;;


	*)
		echo Unknown Command:
		echo lambda "[run|kill|update|reboot|rupdate|backups]"
	;;
esac
